/**
 * The Malooch API
 * Auto genertaed Malooch API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


const ApiClient = require('./ApiClient'),
 ControllerErrorResponseSimple = require('./model/ControllerErrorResponseSimple'),
 ControllerNormalResponse = require('./model/ControllerNormalResponse'),
 ModelsDemandReport = require('./model/ModelsDemandReport'),
 ModelsExchangeReport = require('./model/ModelsExchangeReport'),
 NotAuthorized = require('./model/NotAuthorized'),
 NotAuthorizedError = require('./model/NotAuthorizedError'),
 RoutesDemandReportResponse = require('./model/RoutesDemandReportResponse'),
 RoutesDemandReportResponseData = require('./model/RoutesDemandReportResponseData'),
 RoutesExchangeReportResponse = require('./model/RoutesExchangeReportResponse'),
 RoutesExchangeReportResponseData = require('./model/RoutesExchangeReportResponseData'),
 RoutesLoginPayload = require('./model/RoutesLoginPayload'),
 RoutesRegistrationPayload = require('./model/RoutesRegistrationPayload'),
 RoutesResponseLoginOK = require('./model/RoutesResponseLoginOK'),
 TransT9Base = require('./model/TransT9Base'), RoutesApi = require('./api/RoutesApi')


  /**
   * Auto_genertaed_Malooch_API.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var TheMaloochApi = require('index'); // See note below*.
   * var xxxSvc = new TheMaloochApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new TheMaloochApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new TheMaloochApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new TheMaloochApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The ControllerErrorResponseSimple model constructor.
     * @property {module:model/ControllerErrorResponseSimple}
     */
    ControllerErrorResponseSimple: ControllerErrorResponseSimple,
    /**
     * The ControllerNormalResponse model constructor.
     * @property {module:model/ControllerNormalResponse}
     */
    ControllerNormalResponse: ControllerNormalResponse,
    /**
     * The ModelsDemandReport model constructor.
     * @property {module:model/ModelsDemandReport}
     */
    ModelsDemandReport: ModelsDemandReport,
    /**
     * The ModelsExchangeReport model constructor.
     * @property {module:model/ModelsExchangeReport}
     */
    ModelsExchangeReport: ModelsExchangeReport,
    /**
     * The NotAuthorized model constructor.
     * @property {module:model/NotAuthorized}
     */
    NotAuthorized: NotAuthorized,
    /**
     * The NotAuthorizedError model constructor.
     * @property {module:model/NotAuthorizedError}
     */
    NotAuthorizedError: NotAuthorizedError,
    /**
     * The RoutesDemandReportResponse model constructor.
     * @property {module:model/RoutesDemandReportResponse}
     */
    RoutesDemandReportResponse: RoutesDemandReportResponse,
    /**
     * The RoutesDemandReportResponseData model constructor.
     * @property {module:model/RoutesDemandReportResponseData}
     */
    RoutesDemandReportResponseData: RoutesDemandReportResponseData,
    /**
     * The RoutesExchangeReportResponse model constructor.
     * @property {module:model/RoutesExchangeReportResponse}
     */
    RoutesExchangeReportResponse: RoutesExchangeReportResponse,
    /**
     * The RoutesExchangeReportResponseData model constructor.
     * @property {module:model/RoutesExchangeReportResponseData}
     */
    RoutesExchangeReportResponseData: RoutesExchangeReportResponseData,
    /**
     * The RoutesLoginPayload model constructor.
     * @property {module:model/RoutesLoginPayload}
     */
    RoutesLoginPayload: RoutesLoginPayload,
    /**
     * The RoutesRegistrationPayload model constructor.
     * @property {module:model/RoutesRegistrationPayload}
     */
    RoutesRegistrationPayload: RoutesRegistrationPayload,
    /**
     * The RoutesResponseLoginOK model constructor.
     * @property {module:model/RoutesResponseLoginOK}
     */
    RoutesResponseLoginOK: RoutesResponseLoginOK,
    /**
     * The TransT9Base model constructor.
     * @property {module:model/TransT9Base}
     */
    TransT9Base: TransT9Base,
    /**
     * The RoutesApi service constructor.
     * @property {module:api/RoutesApi}
     */
    RoutesApi: RoutesApi
  };

module.exports = exports;
